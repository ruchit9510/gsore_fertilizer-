@model Vendor.Models.Products

@{
    ViewBag.Title = "Create New Product";
    Layout = "~/Views/Shared/_LayoutAdminPage.cshtml";
}

<div class="content-wrapper">
    <section class="content-header">
        <h1>Create New Product</h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="#">Forms</a></li>
            <li class="active">General Elements</li>
        </ol>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-md-6">
                @using (Html.BeginForm("CreateNewProduct", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "productForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="box box-primary">
                        <div class="box-header">
                            <h3 class="box-title">Add Product</h3>
                        </div>
                        <div class="box-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @if (TempData["SuccessMessage"] != null)
                            {
                                <div id="successMessage" class="alert alert-success">@TempData["SuccessMessage"]</div>
                            }

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductName)
                                @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductPrice)
                                @Html.TextBoxFor(model => model.ProductPrice, new { @class = "form-control", @required = "required", @type = "number", @step = "0.01" })
                                @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.Label("Category")
                                @Html.DropDownList("CategoryId", new SelectList(ViewBag.Categories as List<Vendor.Models.Category>, "CategoryId", "CategoryName"), "Select Category", new { @class = "form-control", @required = "required" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductPicture)
                                <input type="file" name="file" id="file" required />
                                @Html.ValidationMessageFor(model => model.ProductPicture, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="box-footer">
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
</div>

<script>
    // Hide success message after 2 seconds
    setTimeout(function () {
        var successMessage = document.getElementById("successMessage");
        if (successMessage) {
            successMessage.style.display = "none";
        }
    }, 2000);
</script>
